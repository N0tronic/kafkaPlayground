version: '3.5'

services:
  kafkaconsumer:
    image: 'kafkaconsumer:latest'
    depends_on:
      - zookeeper
      - kafka1
      - kafka2
      - kafka3
      - kafkaproducer
    environment:
      - port=8080
  kafkaproducer:
    image: 'kafkaproducer:latest'
    depends_on:
      - zookeeper
      - kafka1
      - kafka2
      - kafka3
    ports:
      - "8080-8082:8080"
    environment:
      - port=8080
  zookeeper:
    container_name: zookeeper
    image: 'wurstmeister/zookeeper'
    ports:
      - "2181:2181"
  kafka1:
    image: 'wurstmeister/kafka'
    ports:
      - "9091:9092"
    environment:
      KAFKA_ADVERTISED_HOST_NAME: 169.254.136.33
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_AUTO_CREATE_TOPICS_ENABLE: 'false'
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
  kafka2:
    image: 'wurstmeister/kafka'
    ports:
      - "9092:9092"
    environment:
      KAFKA_ADVERTISED_HOST_NAME: 169.254.136.33
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_AUTO_CREATE_TOPICS_ENABLE: 'false'
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
  kafka3:
    image: 'wurstmeister/kafka'
    ports:
      - "9093:9092"
    environment:
      KAFKA_ADVERTISED_HOST_NAME: 169.254.136.33
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_AUTO_CREATE_TOPICS_ENABLE: 'false'
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
  portainer:
    container_name: portainer
    image: portainer/portainer
    command: -H unix:///var/run/docker.sock --admin-password '$$2y$$05$$aj6Y0ALq8FQaHmbbeZAUfe0/O.HAV5lly.4m9hwoaCtVERdHbIiTC' #kafka
    ports:
      - '9000:9000'
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock